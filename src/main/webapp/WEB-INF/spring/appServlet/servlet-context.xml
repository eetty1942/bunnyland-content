<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<default-servlet-handler />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="utf-8" />
		<!-- 용량제한 5GB 설정 = 5242880000 / 단위는 바이트 -->
		<beans:property name="maxUploadSize" value = "5242880000"></beans:property>
	</beans:bean>
		
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order">
			<beans:value>0</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order">
			<beans:value>1</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- define interceptors -->
	<interceptors>
	    <interceptor>
	        <mapping path="/content.do"/>
	        
	        <beans:bean class = "net.bunnyland.interceptor.Interceptor"/>
	    </interceptor>
	</interceptors>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    	<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
	    	<beans:property name="url" value="jdbc:mysql://localhost:3306/cdsContent" />
	    	<beans:property name="username" value="root" />
	    	<beans:property name="password" value="1stspen" /> 
	</beans:bean>
	
	<!-- sql 세션을 만들어 줍니다. -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    	<beans:property name="dataSource" ref="dataSource" />
	    	<beans:property name="mapperLocations" value="classpath:/mybatis/*.xml"/>
	    	<beans:property name="typeAliasesPackage" value="net.bunnyland.dto" />
	</beans:bean>
	
	<!-- 만들어둔 쿼리문 파일과 연결해주는 메소드들이 포함되는 DAO파일과 매핑시키는 역할을 합니다. -->
	 <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	   	<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean> 
	<beans:bean id="managerInfoDao" class="net.bunnyland.dao.ManagerInfoDao">
	   	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	<beans:bean id="contentDao" class="net.bunnyland.dao.ContentDao">
	   	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	<beans:bean id="pushLogDao" class="net.bunnyland.dao.PushLogDao">
	   	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	<beans:bean id="userInfoDao" class="net.bunnyland.dao.UserInfoDao">
	   	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	<beans:bean id="contentFileDao" class="net.bunnyland.dao.ContentFileDao">
	   	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	
	<beans:bean id="downloadView" class="net.bunnyland.controller.DownloadView"/>
	<beans:bean id="downloadController" class="net.bunnyland.controller.DownloadController"/>
		
	<context:component-scan base-package="net.bunnyland" />
	
	
	
</beans:beans>
